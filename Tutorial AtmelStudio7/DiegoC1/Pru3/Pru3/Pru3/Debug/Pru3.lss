
Pru3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000fa6  00800200  0000033a  000003ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000033a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000fa7  008011a6  008011a6  00001374  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001374  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000013e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000198  00000000  00000000  00001414  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000106  00000000  00000000  000015ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000013d  00000000  00000000  000016b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000058  00000000  00000000  000017f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001e4  00000000  00000000  00001848  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000c2  00000000  00000000  00001a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001aee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	9f c0       	rjmp	.+318    	; 0x190 <__vector_20>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	11 e1       	ldi	r17, 0x11	; 17
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e3       	ldi	r30, 0x3A	; 58
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 3a       	cpi	r26, 0xA6	; 166
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	21 e2       	ldi	r18, 0x21	; 33
 110:	a6 ea       	ldi	r26, 0xA6	; 166
 112:	b1 e1       	ldi	r27, 0x11	; 17
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ad 34       	cpi	r26, 0x4D	; 77
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	0a c1       	rjmp	.+532    	; 0x336 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:

int main(void){

	int pru1, i=0;
	
	DDRA  = 0xFF;            			//PORTB como salida
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	81 b9       	out	0x01, r24	; 1
	PORTA = 0X00;            			//Inicia PORTB en 0
 128:	12 b8       	out	0x02, r1	; 2
	
		
	DDRB  = 0xFF;            			//PORTB como salida
 12a:	84 b9       	out	0x04, r24	; 4
	PORTB = 0X00;            			//Inicia PORTB en 0
 12c:	15 b8       	out	0x05, r1	; 5

	 //TIMER1
	 
	 asm("LDI R16,1<<2|0<<1|0<<0	; PRESCALER DE 256");
 12e:	04 e0       	ldi	r16, 0x04	; 4
	 asm("STS 0x81,R16				; AQUÍ INICIA EL TIMER");	// 0x81 = TCCR1B
 130:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
	 asm("LDI R16,0x0B				; SE PRECARGA EL TIMER 1");
 134:	0b e0       	ldi	r16, 0x0B	; 11
	 asm("STS 0x85,R16				; CON 0x0BDC=3036");		// 0x85 = TCNT1H
 136:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
	 asm("LDI R16,0xDC				; VALOR NECESARIO PARA");
 13a:	0c ed       	ldi	r16, 0xDC	; 220
	 asm("STS 0x84,R16				; DESBORDAR A 1 Seg");		// 0x84 = TCNT1L
 13c:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
	 asm("LDI R16,1<<0				; HABILITACIÓN DE INT");
 140:	01 e0       	ldi	r16, 0x01	; 1
	 asm("STS 0x6F,R16				; DE TIMER 1");				// 0x6F = TIMSK1
 142:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
	 
	 sei();											// Interrupciones Globales
 146:	78 94       	sei
 148:	00 e0       	ldi	r16, 0x00	; 0
 14a:	12 e0       	ldi	r17, 0x02	; 2
 14c:	c6 ea       	ldi	r28, 0xA6	; 166
 14e:	d1 e1       	ldi	r29, 0x11	; 17


	
	while (1) {

	pru1 = valor+1;
 150:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <valor>
 154:	90 91 a5 11 	lds	r25, 0x11A5	; 0x8011a5 <valor+0x1>
	pru2 = valor+2;
 158:	9c 01       	movw	r18, r24
 15a:	2e 5f       	subi	r18, 0xFE	; 254
 15c:	3f 4f       	sbci	r19, 0xFF	; 255
 15e:	30 93 4c 21 	sts	0x214C, r19	; 0x80214c <pru2+0x1>
 162:	20 93 4b 21 	sts	0x214B, r18	; 0x80214b <pru2>


	
	while (1) {

	pru1 = valor+1;
 166:	01 96       	adiw	r24, 0x01	; 1
	pru2 = valor+2;
	x = char (pru1);
 168:	80 93 4a 21 	sts	0x214A, r24	; 0x80214a <x>
	PORTA = pru1;
 16c:	82 b9       	out	0x02, r24	; 2

	sen1[i] = seno[i]+1;
 16e:	f8 01       	movw	r30, r16
 170:	61 91       	ld	r22, Z+
 172:	71 91       	ld	r23, Z+
 174:	81 91       	ld	r24, Z+
 176:	91 91       	ld	r25, Z+
 178:	8f 01       	movw	r16, r30
 17a:	20 e0       	ldi	r18, 0x00	; 0
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	40 e8       	ldi	r20, 0x80	; 128
 180:	5f e3       	ldi	r21, 0x3F	; 63
 182:	24 d0       	rcall	.+72     	; 0x1cc <__addsf3>
 184:	69 93       	st	Y+, r22
 186:	79 93       	st	Y+, r23
 188:	89 93       	st	Y+, r24
 18a:	99 93       	st	Y+, r25
	i++;
	
	asm("NOP");
 18c:	00 00       	nop

	}
 18e:	e0 cf       	rjmp	.-64     	; 0x150 <main+0x2c>

00000190 <__vector_20>:
	
}


ISR(TIMER1_OVF_vect){	// Subrutina de atención a la interrupción del Timer 1
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
 19a:	8f 93       	push	r24
 19c:	9f 93       	push	r25
	
	 asm("LDI R16,0x0B		; SE PRECARGA EL TIMER 1");
 19e:	0b e0       	ldi	r16, 0x0B	; 11
	 asm("STS 0x85,R16		; CON 0x0BDC=3036");		// 0x85 = TCNT1H
 1a0:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
	 asm("LDI R16,0xDC		; VALOR NECESARIO PARA");
 1a4:	0c ed       	ldi	r16, 0xDC	; 220
	 asm("STS 0x84,R16		; DESBORDAR A 1 Seg");		// 0x84 = TCNT1L
 1a6:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
}


char Sacar_Dato(char dato){
	
	dato = ~dato;
 1aa:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <valor>
 1ae:	80 95       	com	r24
	PORTB = dato;
 1b0:	85 b9       	out	0x05, r24	; 5
	 asm("LDI R16,0x0B		; SE PRECARGA EL TIMER 1");
	 asm("STS 0x85,R16		; CON 0x0BDC=3036");		// 0x85 = TCNT1H
	 asm("LDI R16,0xDC		; VALOR NECESARIO PARA");
	 asm("STS 0x84,R16		; DESBORDAR A 1 Seg");		// 0x84 = TCNT1L

	valor = Sacar_Dato(valor);
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	90 93 a5 11 	sts	0x11A5, r25	; 0x8011a5 <valor+0x1>
 1b8:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <valor>
	
}
 1bc:	9f 91       	pop	r25
 1be:	8f 91       	pop	r24
 1c0:	0f 90       	pop	r0
 1c2:	0f be       	out	0x3f, r0	; 63
 1c4:	0f 90       	pop	r0
 1c6:	1f 90       	pop	r1
 1c8:	18 95       	reti

000001ca <__subsf3>:
 1ca:	50 58       	subi	r21, 0x80	; 128

000001cc <__addsf3>:
 1cc:	bb 27       	eor	r27, r27
 1ce:	aa 27       	eor	r26, r26
 1d0:	0e d0       	rcall	.+28     	; 0x1ee <__addsf3x>
 1d2:	77 c0       	rjmp	.+238    	; 0x2c2 <__fp_round>
 1d4:	68 d0       	rcall	.+208    	; 0x2a6 <__fp_pscA>
 1d6:	30 f0       	brcs	.+12     	; 0x1e4 <__addsf3+0x18>
 1d8:	6d d0       	rcall	.+218    	; 0x2b4 <__fp_pscB>
 1da:	20 f0       	brcs	.+8      	; 0x1e4 <__addsf3+0x18>
 1dc:	31 f4       	brne	.+12     	; 0x1ea <__addsf3+0x1e>
 1de:	9f 3f       	cpi	r25, 0xFF	; 255
 1e0:	11 f4       	brne	.+4      	; 0x1e6 <__addsf3+0x1a>
 1e2:	1e f4       	brtc	.+6      	; 0x1ea <__addsf3+0x1e>
 1e4:	5d c0       	rjmp	.+186    	; 0x2a0 <__fp_nan>
 1e6:	0e f4       	brtc	.+2      	; 0x1ea <__addsf3+0x1e>
 1e8:	e0 95       	com	r30
 1ea:	e7 fb       	bst	r30, 7
 1ec:	53 c0       	rjmp	.+166    	; 0x294 <__fp_inf>

000001ee <__addsf3x>:
 1ee:	e9 2f       	mov	r30, r25
 1f0:	79 d0       	rcall	.+242    	; 0x2e4 <__fp_split3>
 1f2:	80 f3       	brcs	.-32     	; 0x1d4 <__addsf3+0x8>
 1f4:	ba 17       	cp	r27, r26
 1f6:	62 07       	cpc	r22, r18
 1f8:	73 07       	cpc	r23, r19
 1fa:	84 07       	cpc	r24, r20
 1fc:	95 07       	cpc	r25, r21
 1fe:	18 f0       	brcs	.+6      	; 0x206 <__addsf3x+0x18>
 200:	71 f4       	brne	.+28     	; 0x21e <__addsf3x+0x30>
 202:	9e f5       	brtc	.+102    	; 0x26a <__addsf3x+0x7c>
 204:	91 c0       	rjmp	.+290    	; 0x328 <__fp_zero>
 206:	0e f4       	brtc	.+2      	; 0x20a <__addsf3x+0x1c>
 208:	e0 95       	com	r30
 20a:	0b 2e       	mov	r0, r27
 20c:	ba 2f       	mov	r27, r26
 20e:	a0 2d       	mov	r26, r0
 210:	0b 01       	movw	r0, r22
 212:	b9 01       	movw	r22, r18
 214:	90 01       	movw	r18, r0
 216:	0c 01       	movw	r0, r24
 218:	ca 01       	movw	r24, r20
 21a:	a0 01       	movw	r20, r0
 21c:	11 24       	eor	r1, r1
 21e:	ff 27       	eor	r31, r31
 220:	59 1b       	sub	r21, r25
 222:	99 f0       	breq	.+38     	; 0x24a <__addsf3x+0x5c>
 224:	59 3f       	cpi	r21, 0xF9	; 249
 226:	50 f4       	brcc	.+20     	; 0x23c <__addsf3x+0x4e>
 228:	50 3e       	cpi	r21, 0xE0	; 224
 22a:	68 f1       	brcs	.+90     	; 0x286 <__addsf3x+0x98>
 22c:	1a 16       	cp	r1, r26
 22e:	f0 40       	sbci	r31, 0x00	; 0
 230:	a2 2f       	mov	r26, r18
 232:	23 2f       	mov	r18, r19
 234:	34 2f       	mov	r19, r20
 236:	44 27       	eor	r20, r20
 238:	58 5f       	subi	r21, 0xF8	; 248
 23a:	f3 cf       	rjmp	.-26     	; 0x222 <__addsf3x+0x34>
 23c:	46 95       	lsr	r20
 23e:	37 95       	ror	r19
 240:	27 95       	ror	r18
 242:	a7 95       	ror	r26
 244:	f0 40       	sbci	r31, 0x00	; 0
 246:	53 95       	inc	r21
 248:	c9 f7       	brne	.-14     	; 0x23c <__addsf3x+0x4e>
 24a:	7e f4       	brtc	.+30     	; 0x26a <__addsf3x+0x7c>
 24c:	1f 16       	cp	r1, r31
 24e:	ba 0b       	sbc	r27, r26
 250:	62 0b       	sbc	r22, r18
 252:	73 0b       	sbc	r23, r19
 254:	84 0b       	sbc	r24, r20
 256:	ba f0       	brmi	.+46     	; 0x286 <__addsf3x+0x98>
 258:	91 50       	subi	r25, 0x01	; 1
 25a:	a1 f0       	breq	.+40     	; 0x284 <__addsf3x+0x96>
 25c:	ff 0f       	add	r31, r31
 25e:	bb 1f       	adc	r27, r27
 260:	66 1f       	adc	r22, r22
 262:	77 1f       	adc	r23, r23
 264:	88 1f       	adc	r24, r24
 266:	c2 f7       	brpl	.-16     	; 0x258 <__addsf3x+0x6a>
 268:	0e c0       	rjmp	.+28     	; 0x286 <__addsf3x+0x98>
 26a:	ba 0f       	add	r27, r26
 26c:	62 1f       	adc	r22, r18
 26e:	73 1f       	adc	r23, r19
 270:	84 1f       	adc	r24, r20
 272:	48 f4       	brcc	.+18     	; 0x286 <__addsf3x+0x98>
 274:	87 95       	ror	r24
 276:	77 95       	ror	r23
 278:	67 95       	ror	r22
 27a:	b7 95       	ror	r27
 27c:	f7 95       	ror	r31
 27e:	9e 3f       	cpi	r25, 0xFE	; 254
 280:	08 f0       	brcs	.+2      	; 0x284 <__addsf3x+0x96>
 282:	b3 cf       	rjmp	.-154    	; 0x1ea <__addsf3+0x1e>
 284:	93 95       	inc	r25
 286:	88 0f       	add	r24, r24
 288:	08 f0       	brcs	.+2      	; 0x28c <__addsf3x+0x9e>
 28a:	99 27       	eor	r25, r25
 28c:	ee 0f       	add	r30, r30
 28e:	97 95       	ror	r25
 290:	87 95       	ror	r24
 292:	08 95       	ret

00000294 <__fp_inf>:
 294:	97 f9       	bld	r25, 7
 296:	9f 67       	ori	r25, 0x7F	; 127
 298:	80 e8       	ldi	r24, 0x80	; 128
 29a:	70 e0       	ldi	r23, 0x00	; 0
 29c:	60 e0       	ldi	r22, 0x00	; 0
 29e:	08 95       	ret

000002a0 <__fp_nan>:
 2a0:	9f ef       	ldi	r25, 0xFF	; 255
 2a2:	80 ec       	ldi	r24, 0xC0	; 192
 2a4:	08 95       	ret

000002a6 <__fp_pscA>:
 2a6:	00 24       	eor	r0, r0
 2a8:	0a 94       	dec	r0
 2aa:	16 16       	cp	r1, r22
 2ac:	17 06       	cpc	r1, r23
 2ae:	18 06       	cpc	r1, r24
 2b0:	09 06       	cpc	r0, r25
 2b2:	08 95       	ret

000002b4 <__fp_pscB>:
 2b4:	00 24       	eor	r0, r0
 2b6:	0a 94       	dec	r0
 2b8:	12 16       	cp	r1, r18
 2ba:	13 06       	cpc	r1, r19
 2bc:	14 06       	cpc	r1, r20
 2be:	05 06       	cpc	r0, r21
 2c0:	08 95       	ret

000002c2 <__fp_round>:
 2c2:	09 2e       	mov	r0, r25
 2c4:	03 94       	inc	r0
 2c6:	00 0c       	add	r0, r0
 2c8:	11 f4       	brne	.+4      	; 0x2ce <__fp_round+0xc>
 2ca:	88 23       	and	r24, r24
 2cc:	52 f0       	brmi	.+20     	; 0x2e2 <__fp_round+0x20>
 2ce:	bb 0f       	add	r27, r27
 2d0:	40 f4       	brcc	.+16     	; 0x2e2 <__fp_round+0x20>
 2d2:	bf 2b       	or	r27, r31
 2d4:	11 f4       	brne	.+4      	; 0x2da <__fp_round+0x18>
 2d6:	60 ff       	sbrs	r22, 0
 2d8:	04 c0       	rjmp	.+8      	; 0x2e2 <__fp_round+0x20>
 2da:	6f 5f       	subi	r22, 0xFF	; 255
 2dc:	7f 4f       	sbci	r23, 0xFF	; 255
 2de:	8f 4f       	sbci	r24, 0xFF	; 255
 2e0:	9f 4f       	sbci	r25, 0xFF	; 255
 2e2:	08 95       	ret

000002e4 <__fp_split3>:
 2e4:	57 fd       	sbrc	r21, 7
 2e6:	90 58       	subi	r25, 0x80	; 128
 2e8:	44 0f       	add	r20, r20
 2ea:	55 1f       	adc	r21, r21
 2ec:	59 f0       	breq	.+22     	; 0x304 <__fp_splitA+0x10>
 2ee:	5f 3f       	cpi	r21, 0xFF	; 255
 2f0:	71 f0       	breq	.+28     	; 0x30e <__fp_splitA+0x1a>
 2f2:	47 95       	ror	r20

000002f4 <__fp_splitA>:
 2f4:	88 0f       	add	r24, r24
 2f6:	97 fb       	bst	r25, 7
 2f8:	99 1f       	adc	r25, r25
 2fa:	61 f0       	breq	.+24     	; 0x314 <__fp_splitA+0x20>
 2fc:	9f 3f       	cpi	r25, 0xFF	; 255
 2fe:	79 f0       	breq	.+30     	; 0x31e <__fp_splitA+0x2a>
 300:	87 95       	ror	r24
 302:	08 95       	ret
 304:	12 16       	cp	r1, r18
 306:	13 06       	cpc	r1, r19
 308:	14 06       	cpc	r1, r20
 30a:	55 1f       	adc	r21, r21
 30c:	f2 cf       	rjmp	.-28     	; 0x2f2 <__fp_split3+0xe>
 30e:	46 95       	lsr	r20
 310:	f1 df       	rcall	.-30     	; 0x2f4 <__fp_splitA>
 312:	08 c0       	rjmp	.+16     	; 0x324 <__fp_splitA+0x30>
 314:	16 16       	cp	r1, r22
 316:	17 06       	cpc	r1, r23
 318:	18 06       	cpc	r1, r24
 31a:	99 1f       	adc	r25, r25
 31c:	f1 cf       	rjmp	.-30     	; 0x300 <__fp_splitA+0xc>
 31e:	86 95       	lsr	r24
 320:	71 05       	cpc	r23, r1
 322:	61 05       	cpc	r22, r1
 324:	08 94       	sec
 326:	08 95       	ret

00000328 <__fp_zero>:
 328:	e8 94       	clt

0000032a <__fp_szero>:
 32a:	bb 27       	eor	r27, r27
 32c:	66 27       	eor	r22, r22
 32e:	77 27       	eor	r23, r23
 330:	cb 01       	movw	r24, r22
 332:	97 f9       	bld	r25, 7
 334:	08 95       	ret

00000336 <_exit>:
 336:	f8 94       	cli

00000338 <__stop_program>:
 338:	ff cf       	rjmp	.-2      	; 0x338 <__stop_program>
